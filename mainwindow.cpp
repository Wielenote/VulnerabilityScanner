#include "mainwindow.h"
#include "ui_mainwindow.h"
#include <JsonParser.h>
#include <adddevice_dialog.h>

//#include <QtNetwork/QNetworkReply>


void MainWindow::ShowDevices()
{
    ui->listWidget->clear();
    QString path = "/home/wielenote/Documents/devices.json";
    auto file = JsonFile::ReadFile(path);
    auto doc = QJsonDocument::fromJson(file);
    auto doc_object = doc.object();

    auto list_of_devices = doc_object.keys();
    ui->listWidget->addItems(list_of_devices);
}
MainWindow::MainWindow(QWidget *parent)
    : QMainWindow(parent)
    , ui(new Ui::MainWindow)
{
    ui->setupUi(this);
    //networkManager = new QNetworkAccessManager();
    //connect(networkManager, &QNetworkAccessManager::finished, this, &MainWindow::onResult);
    //networkManager->get(QNetworkRequest(
        //QUrl("https://ubuntu.com/security/cves.json?package=curl&order=descending&sort_by=published")));
    //connect(this,show,this, ShowDevices);
    ShowDevices();
}

MainWindow::~MainWindow()
{
    delete ui;
}

void MainWindow::on_pushButton_clicked()
{
    auto a = JsonFile();
    auto val = a.GetVulnerabilities();
    int i = 0;

    for (const auto& item : val)
    {
        QTreeWidgetItem *_item;
        _item->setText(0, QString::fromStdString(item.ToString()));
        ui->treeWidget->insertTopLevelItem(i, _item);
        ui->textEdit->append(QString::fromStdString(item.ToString() + "\n"));
    }
    stringstream ss;
    ss <<"\n\nTotal: " << a.GetVulnerabilities().size() <<  "vulnerabilities";

    ui->textEdit->append(QString::fromStdString(ss.str()));
    //VulnersWidget* my_widget = new VulnersWidget();
    //ui->verticalLayout->addWidget(my_widget);

}

void MainWindow::onResult(QNetworkReply *reply)
{
    auto er = reply->error();
    if(er == QNetworkReply::NoError)
    {
        QJsonDocument document = QJsonDocument::fromJson(reply->readAll());
        //QJsonObject root = document.object();
        //ui->textEdit->append(root.keys().at(0) + ": " + root.value(root.keys().at(0)).toString());
        ui->textEdit->append(document.object().keys().at(1));
        auto Object = document.object().value("cves");
        auto array = Object.toArray();
        auto currentObject = array.at(0).toObject();
        for(const auto& item : currentObject.keys())
        {

            qDebug() << item <<'-' << currentObject.value(item).toVariant().toString();
        }
    }
    reply->deleteLater();
}

void MainWindow::on_add_button_clicked()
{
    AddDevice_dialog dialog(this);
    this->hide();
    dialog.exec();
}

